[{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "A recipe is a directed acyclic graph (DAG) with heterogeneous nodes and edges provides a structured and semantically rich way to represent the information. In this context, the nodes represent entities such as ingredients, utensils, or tools, actions (e.g., chop, boil), and possibly conditions (e.g., for 5 minutes, until golden brown), and final product. The edges represent relationships or dependencies between these entities. The graph must represent intermediate states (like a output of mixing spices), optional steps, and recipe variants. The graph should model XORs (e.g., either use dry chilies or green chilies but not both, either bake at 400 degrees for 10 minutes or broil on high for 20 minutes). It should capture 1) measures e.g., one cup of milk, temperature at 400 deg. F, bake for 20 minutes etc., and 2) conditions like \"fry until light brown\" or \"check for uniform consistency\". The graph needs to represent sub-recipes (like preparing a gravy) as a hierarchical subgraph. We need a separate set of FOLLOWED_BY edges between successive process nodes. Also for every process, we need a set of incoming PREREQ (for prerequisite) edges to connect ingredients to processes. We also need USES edges between process nodes and tool nodes. Further, for each node, add an attribute called \"referenceText\" where you identify the phrase from the original text that relates to the node or the edge of the graph. Produce the result using Cypher CREATE, MERGE and SET statements. Do not invent any ingredients, tools, or utensil nodes. Ensure the graph is connected. Also ensure each sub-recipe is a small recipe graph whose end node is the name of the sub-recipes. The sub-recipe end nodes must be connected to the main recipe. Now I am going to give you recipe texts."}, {"role": "user", "content": "Recipe Name: Frozen Cranberry Fruit Salad. Ingredients: 1 can whole cranberries, 1 can Eagle brand fat-free condensed milk, 1 c. chopped nuts, 1 8 oz. container Cool Whip, Instructions: Mix all ingredients and freeze."}], "temperature": 0.5, "top_p": 0.5}, {"id": "chatcmpl-8yCPEDJfK8vOhv4pDoBpJbbGrM0FH", "object": "chat.completion", "created": 1709358060, "model": "gpt-3.5-turbo-0125", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```cypher\n// Ingredients\nCREATE (:Ingredient {name: \"whole cranberries\", referenceText: \"1 can whole cranberries\"})\nCREATE (:Ingredient {name: \"Eagle brand fat-free condensed milk\", referenceText: \"1 can Eagle brand fat-free condensed milk\"})\nCREATE (:Ingredient {name: \"nuts\", referenceText: \"1 c. chopped nuts\"})\nCREATE (:Ingredient {name: \"Cool Whip\", referenceText: \"1 8 oz. container Cool Whip\"})\n\n// Process nodes\nCREATE (:Process {name: \"Mix all ingredients\", referenceText: \"Mix all ingredients\"})\nCREATE (:Process {name: \"Freeze\", referenceText: \"freeze\"})\n\n// Recipe node\nCREATE (:Recipe {name: \"Frozen Cranberry Fruit Salad\"})\n\n// Edges\nCREATE\n  // Ingredient to Process\n  (:Ingredient)-[:PREREQ]->(:Process),\n  (:Ingredient)-[:PREREQ]->(:Process),\n  (:Ingredient)-[:PREREQ]->(:Process),\n  (:Ingredient)-[:PREREQ]->(:Process),\n  \n  // Process to Process\n  (:Process)-[:FOLLOWED_BY]->(:Process),\n  \n  // Process to Recipe\n  (:Process)-[:FOLLOWED_BY]->(:Recipe),\n  (:Process)-[:FOLLOWED_BY]->(:Recipe),\n  (:Recipe)-[:FOLLOWED_BY]->(:Process),\n  \n  // Process to Ingredient\n  (:Process)-[:USES]->(:Ingredient),\n  (:Process)-[:USES]->(:Ingredient),\n  (:Process)-[:USES]->(:Ingredient),\n  (:Process)-[:USES]->(:Ingredient)\n```"}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 453, "completion_tokens": 331, "total_tokens": 784}, "system_fingerprint": "fp_2b778c6b35"}]
[{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "A recipe is a directed acyclic graph (DAG) with heterogeneous nodes and edges provides a structured and semantically rich way to represent the information. In this context, the nodes represent entities such as ingredients, utensils, or tools, actions (e.g., chop, boil), and possibly conditions (e.g., for 5 minutes, until golden brown), and final product. The edges represent relationships or dependencies between these entities. The graph must represent intermediate states (like a output of mixing spices), optional steps, and recipe variants. The graph should model XORs (e.g., either use dry chilies or green chilies but not both, either bake at 400 degrees for 10 minutes or broil on high for 20 minutes). It should capture 1) measures e.g., one cup of milk, temperature at 400 deg. F, bake for 20 minutes etc., and 2) conditions like \"fry until light brown\" or \"check for uniform consistency\". The graph needs to represent sub-recipes (like preparing a gravy) as a hierarchical subgraph. We need a separate set of FOLLOWED_BY edges between successive process nodes. Also for every process, we need a set of incoming PREREQ (for prerequisite) edges to connect ingredients to processes. We also need USES edges between process nodes and tool nodes. Further, for each node, add an attribute called \"referenceText\" where you identify the phrase from the original text that relates to the node or the edge of the graph. Produce the result using Cypher CREATE, MERGE and SET statements. Do not invent any ingredients, tools, or utensil nodes. Ensure the graph is connected. Also ensure each sub-recipe is a small recipe graph whose end node is the name of the sub-recipes. The sub-recipe end nodes must be connected to the main recipe. Now I am going to give you recipe texts."}, {"role": "user", "content": "Recipe Name: Mimosa Float. Ingredients: champagne, triple sec, orange sorbet, Instructions: Place 1 small scoop sorbet in bottom of glass. Add 1 shot of triple sec. Fill glass slowly with champagne. Stir before drinking."}], "temperature": 0.5, "top_p": 0.5}, {"id": "chatcmpl-8yCPE2dNjub25mKk7r6PdWf4OTQl1", "object": "chat.completion", "created": 1709358060, "model": "gpt-3.5-turbo-0125", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```cypher\n// Ingredients\nCREATE (:Ingredient {name: \"champagne\", referenceText: \"champagne\"})\nCREATE (:Ingredient {name: \"triple sec\", referenceText: \"triple sec\"})\nCREATE (:Ingredient {name: \"orange sorbet\", referenceText: \"orange sorbet\"})\n\n// Process nodes\nCREATE (:Process {name: \"scoop sorbet\", referenceText: \"Place 1 small scoop sorbet in bottom of glass\"})\nCREATE (:Process {name: \"add triple sec\", referenceText: \"Add 1 shot of triple sec\"})\nCREATE (:Process {name: \"fill with champagne\", referenceText: \"Fill glass slowly with champagne\"})\nCREATE (:Process {name: \"stir\", referenceText: \"Stir before drinking\"})\n\n// Connections between ingredients and processes\nCREATE (:PREREQ)-[:PREREQ]->(:Ingredient {name: \"orange sorbet\"})\nCREATE (:PREREQ)-[:PREREQ]->(:Ingredient {name: \"triple sec\"})\nCREATE (:PREREQ)-[:PREREQ]->(:Ingredient {name: \"champagne\"})\nCREATE (:USES)-[:USES]->(:Process {name: \"scoop sorbet\"})\nCREATE (:USES)-[:USES]->(:Process {name: \"add triple sec\"})\nCREATE (:USES)-[:USES]->(:Process {name: \"fill with champagne\"})\n\n// FOLLOWED_BY relationships between processes\nCREATE (:FOLLOWED_BY)-[:FOLLOWED_BY]->(:Process {name: \"scoop sorbet\"})-[:FOLLOWED_BY]->(:Process {name: \"add triple sec\"})-[:FOLLOWED_BY]->(:Process {name: \"fill with champagne\"})-[:FOLLOWED_BY]->(:Process {name: \"stir\"})\n\n// Final node\nCREATE (:FinalProduct {name: \"Mimosa Float\"})\n\n// Connect final process to final product\nCREATE (:FOLLOWED_BY)-[:FOLLOWED_BY]->(:Process {name: \"stir\"})-[:FOLLOWED_BY]->(:FinalProduct {name: \"Mimosa Float\"})\n```"}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 450, "completion_tokens": 435, "total_tokens": 885}, "system_fingerprint": "fp_2b778c6b35"}]
[{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "A recipe is a directed acyclic graph (DAG) with heterogeneous nodes and edges provides a structured and semantically rich way to represent the information. In this context, the nodes represent entities such as ingredients, utensils, or tools, actions (e.g., chop, boil), and possibly conditions (e.g., for 5 minutes, until golden brown), and final product. The edges represent relationships or dependencies between these entities. The graph must represent intermediate states (like a output of mixing spices), optional steps, and recipe variants. The graph should model XORs (e.g., either use dry chilies or green chilies but not both, either bake at 400 degrees for 10 minutes or broil on high for 20 minutes). It should capture 1) measures e.g., one cup of milk, temperature at 400 deg. F, bake for 20 minutes etc., and 2) conditions like \"fry until light brown\" or \"check for uniform consistency\". The graph needs to represent sub-recipes (like preparing a gravy) as a hierarchical subgraph. We need a separate set of FOLLOWED_BY edges between successive process nodes. Also for every process, we need a set of incoming PREREQ (for prerequisite) edges to connect ingredients to processes. We also need USES edges between process nodes and tool nodes. Further, for each node, add an attribute called \"referenceText\" where you identify the phrase from the original text that relates to the node or the edge of the graph. Produce the result using Cypher CREATE, MERGE and SET statements. Do not invent any ingredients, tools, or utensil nodes. Ensure the graph is connected. Also ensure each sub-recipe is a small recipe graph whose end node is the name of the sub-recipes. The sub-recipe end nodes must be connected to the main recipe. Now I am going to give you recipe texts."}, {"role": "user", "content": "Recipe Name: Lemon Strawberry Tarts. Ingredients: 1 package (18 ounces) refrigerated sugar cookie dough, 3/4 cup chilled lemon curd, 6 large fresh strawberries, sliced, Whipped cream, Instructions: Cut the cookie dough into 1/2-in. slices. Place 2 in. apart on ungreased . Bake at 350 deg. F for 11-12 minutes or until lightly browned. Remove to wire racks to cool. Spread six cookies with 2 tablespoons lemon curd. Garnish with strawberries and whipped cream. Save remaining cookies for another use."}], "temperature": 0.5, "top_p": 0.5}, {"id": "chatcmpl-8yCPEpDlEjelqKP86bIXZsDsMhPCP", "object": "chat.completion", "created": 1709358060, "model": "gpt-3.5-turbo-0125", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```cypher\n// Ingredients\nCREATE (:Ingredient {name: \"refrigerated sugar cookie dough\", referenceText: \"1 package (18 ounces) refrigerated sugar cookie dough\"})\nCREATE (:Ingredient {name: \"lemon curd\", referenceText: \"3/4 cup chilled lemon curd\"})\nCREATE (:Ingredient {name: \"fresh strawberries\", referenceText: \"6 large fresh strawberries, sliced\"})\nCREATE (:Ingredient {name: \"whipped cream\", referenceText: \"Whipped cream\"})\n\n// Tools\nCREATE (:Tool {name: \"oven\", referenceText: \"Bake at 350 deg. F for 11-12 minutes\"})\nCREATE (:Tool {name: \"wire racks\", referenceText: \"Remove to wire racks to cool\"})\n\n// Processes\nCREATE (:Process {name: \"slice cookie dough\", referenceText: \"Cut the cookie dough into 1/2-in. slices\"})\nCREATE (:Process {name: \"bake cookies\", referenceText: \"Bake at 350 deg. F for 11-12 minutes or until lightly browned\"})\nCREATE (:Process {name: \"spread lemon curd\", referenceText: \"Spread six cookies with 2 tablespoons lemon curd\"})\nCREATE (:Process {name: \"garnish with strawberries\", referenceText: \"Garnish with strawberries and whipped cream\"})\n\n// Recipe\nCREATE (:Recipe {name: \"Lemon Strawberry Tarts\"})\n\n// Connect Ingredients to Processes\nMATCH (i:Ingredient {name: \"refrigerated sugar cookie dough\"}), (p:Process {name: \"slice cookie dough\"})\nCREATE (i)-[:PREREQ]->(p)\nMATCH (i:Ingredient {name: \"lemon curd\"}), (p:Process {name: \"spread lemon curd\"})\nCREATE (i)-[:PREREQ]->(p)\nMATCH (i:Ingredient {name: \"fresh strawberries\"}), (p:Process {name: \"garnish with strawberries\"})\nCREATE (i)-[:PREREQ]->(p)\n\n// Connect Processes to Tools\nMATCH (p:Process {name: \"bake cookies\"}), (t:Tool {name: \"oven\"})\nCREATE (p)-[:USES]->(t)\nMATCH (p:Process {name: \"bake cookies\"}), (t:Tool {name: \"wire racks\"})\nCREATE (p)-[:FOLLOWED_BY]->(t)\n\n// Connect Processes to Recipe\nMATCH (p:Process)\nWHERE p.name IN [\"slice cookie dough\", \"bake cookies\", \"spread lemon curd\", \"garnish with strawberries\"]\nCREATE (p)-[:PART_OF]->(:Recipe {name: \"Lemon Strawberry Tarts\"})\n```"}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 523, "completion_tokens": 557, "total_tokens": 1080}, "system_fingerprint": "fp_2b778c6b35"}]
[{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "A recipe is a directed acyclic graph (DAG) with heterogeneous nodes and edges provides a structured and semantically rich way to represent the information. In this context, the nodes represent entities such as ingredients, utensils, or tools, actions (e.g., chop, boil), and possibly conditions (e.g., for 5 minutes, until golden brown), and final product. The edges represent relationships or dependencies between these entities. The graph must represent intermediate states (like a output of mixing spices), optional steps, and recipe variants. The graph should model XORs (e.g., either use dry chilies or green chilies but not both, either bake at 400 degrees for 10 minutes or broil on high for 20 minutes). It should capture 1) measures e.g., one cup of milk, temperature at 400 deg. F, bake for 20 minutes etc., and 2) conditions like \"fry until light brown\" or \"check for uniform consistency\". The graph needs to represent sub-recipes (like preparing a gravy) as a hierarchical subgraph. We need a separate set of FOLLOWED_BY edges between successive process nodes. Also for every process, we need a set of incoming PREREQ (for prerequisite) edges to connect ingredients to processes. We also need USES edges between process nodes and tool nodes. Further, for each node, add an attribute called \"referenceText\" where you identify the phrase from the original text that relates to the node or the edge of the graph. Produce the result using Cypher CREATE, MERGE and SET statements. Do not invent any ingredients, tools, or utensil nodes. Ensure the graph is connected. Also ensure each sub-recipe is a small recipe graph whose end node is the name of the sub-recipes. The sub-recipe end nodes must be connected to the main recipe. Now I am going to give you recipe texts."}, {"role": "user", "content": "Recipe Name: Pecan Pie. Ingredients: 1 1/2 c. chopped pecans, 3 eggs, 1 c. sugar, 1 c. light corn syrup, dash of salt, 1 tsp. vanilla, 4 Tbsp. butter, melted, 1 pie crust, Instructions: Mix all ingredients together. Pourtinto pie crust. Bake in preheated 325 deg. F oven for about 45 minutes."}], "temperature": 0.5, "top_p": 0.5}, {"id": "chatcmpl-8yCPEvqOHyGfBSRH2UMHVAVfWiEK5", "object": "chat.completion", "created": 1709358060, "model": "gpt-3.5-turbo-0125", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```cypher\n// Ingredients\nCREATE (:Ingredient {name: \"chopped pecans\", referenceText: \"1 1/2 c. chopped pecans\"})\nCREATE (:Ingredient {name: \"eggs\", referenceText: \"3 eggs\"})\nCREATE (:Ingredient {name: \"sugar\", referenceText: \"1 c. sugar\"})\nCREATE (:Ingredient {name: \"light corn syrup\", referenceText: \"1 c. light corn syrup\"})\nCREATE (:Ingredient {name: \"salt\", referenceText: \"dash of salt\"})\nCREATE (:Ingredient {name: \"vanilla\", referenceText: \"1 tsp. vanilla\"})\nCREATE (:Ingredient {name: \"butter\", referenceText: \"4 Tbsp. butter, melted\"})\nCREATE (:Ingredient {name: \"pie crust\", referenceText: \"1 pie crust\"})\n\n// Process nodes\nCREATE (:Process {name: \"Mix all ingredients together\", referenceText: \"Mix all ingredients together\"})\nCREATE (:Process {name: \"Pour into pie crust\", referenceText: \"Pour into pie crust\"})\nCREATE (:Process {name: \"Bake in preheated oven\", referenceText: \"Bake in preheated 325 deg. F oven for about 45 minutes\"})\n\n// Tool nodes\nCREATE (:Tool {name: \"mixing bowl\", referenceText: \"Mix all ingredients together\"})\nCREATE (:Tool {name: \"pie dish\", referenceText: \"Pour into pie crust\"})\nCREATE (:Tool {name: \"oven\", referenceText: \"Bake in preheated oven\"})\n\n// Connections\nCREATE\n  // Ingredient to Process connections\n  (choppedPecans)-[:PREREQ]->(:Process),\n  (eggs)-[:PREREQ]->(:Process),\n  (sugar)-[:PREREQ]->(:Process),\n  (lightCornSyrup)-[:PREREQ]->(:Process),\n  (salt)-[:PREREQ]->(:Process),\n  (vanilla)-[:PREREQ]->(:Process),\n  (butter)-[:PREREQ]->(:Process),\n  (pieCrust)-[:PREREQ]->(:Process),\n  \n  // Process to Tool connections\n  (:Process)-[:USES]->(mixingBowl),\n  (:Process)-[:USES]->(pieDish),\n  (:Process)-[:USES]->(oven),\n  \n  // Process sequence\n  (mixingBowl)-[:FOLLOWED_BY]->(pourIntoPieCrust),\n  (pourIntoPieCrust)-[:FOLLOWED_BY]->(bakeInOven)\n```"}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 494, "completion_tokens": 531, "total_tokens": 1025}, "system_fingerprint": "fp_2b778c6b35"}]
[{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "A recipe is a directed acyclic graph (DAG) with heterogeneous nodes and edges provides a structured and semantically rich way to represent the information. In this context, the nodes represent entities such as ingredients, utensils, or tools, actions (e.g., chop, boil), and possibly conditions (e.g., for 5 minutes, until golden brown), and final product. The edges represent relationships or dependencies between these entities. The graph must represent intermediate states (like a output of mixing spices), optional steps, and recipe variants. The graph should model XORs (e.g., either use dry chilies or green chilies but not both, either bake at 400 degrees for 10 minutes or broil on high for 20 minutes). It should capture 1) measures e.g., one cup of milk, temperature at 400 deg. F, bake for 20 minutes etc., and 2) conditions like \"fry until light brown\" or \"check for uniform consistency\". The graph needs to represent sub-recipes (like preparing a gravy) as a hierarchical subgraph. We need a separate set of FOLLOWED_BY edges between successive process nodes. Also for every process, we need a set of incoming PREREQ (for prerequisite) edges to connect ingredients to processes. We also need USES edges between process nodes and tool nodes. Further, for each node, add an attribute called \"referenceText\" where you identify the phrase from the original text that relates to the node or the edge of the graph. Produce the result using Cypher CREATE, MERGE and SET statements. Do not invent any ingredients, tools, or utensil nodes. Ensure the graph is connected. Also ensure each sub-recipe is a small recipe graph whose end node is the name of the sub-recipes. The sub-recipe end nodes must be connected to the main recipe. Now I am going to give you recipe texts."}, {"role": "user", "content": "Recipe Name: Egg Custard Pie. Ingredients: 2 c. milk, scalded, 4 large eggs or 6 small, 1 c. sugar, 2 Tbsp. butter, pinch of salt, 1/2 tsp. nutmeg, 1 tsp. vanilla, Instructions: Mix sugar, butter, salt and nutmeg. Add milk and beaten eggs. Pour into unbaked pie shell. Bake at 425 deg. F for 7 minutes or at 325 deg. F for 20 to 25 minutes."}], "temperature": 0.5, "top_p": 0.5}, {"id": "chatcmpl-8yCPE2ZJrn3tQZUDq2GZfk7WrKXDw", "object": "chat.completion", "created": 1709358060, "model": "gpt-3.5-turbo-0125", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```cypher\n// Ingredients\nCREATE (:Ingredient {name: \"milk\", referenceText: \"2 c. milk\"})\nCREATE (:Ingredient {name: \"eggs\", referenceText: \"4 large eggs or 6 small\"})\nCREATE (:Ingredient {name: \"sugar\", referenceText: \"1 c. sugar\"})\nCREATE (:Ingredient {name: \"butter\", referenceText: \"2 Tbsp. butter\"})\nCREATE (:Ingredient {name: \"salt\", referenceText: \"pinch of salt\"})\nCREATE (:Ingredient {name: \"nutmeg\", referenceText: \"1/2 tsp. nutmeg\"})\nCREATE (:Ingredient {name: \"vanilla\", referenceText: \"1 tsp. vanilla\"})\nCREATE (:Ingredient {name: \"pie shell\", referenceText: \"unbaked pie shell\"})\n\n// Process nodes\nCREATE (:Process {name: \"mixing sugar, butter, salt and nutmeg\", referenceText: \"Mix sugar, butter, salt and nutmeg\"})\nCREATE (:Process {name: \"beating eggs\", referenceText: \"beaten eggs\"})\nCREATE (:Process {name: \"scalding milk\", referenceText: \"scalded milk\"})\nCREATE (:Process {name: \"pouring into pie shell\", referenceText: \"Pour into unbaked pie shell\"})\nCREATE (:Process {name: \"baking at 425 deg. F for 7 minutes\", referenceText: \"Bake at 425 deg. F for 7 minutes\"})\nCREATE (:Process {name: \"baking at 325 deg. F for 20 to 25 minutes\", referenceText: \"Bake at 325 deg. F for 20 to 25 minutes\"})\n\n// Tools\nCREATE (:Tool {name: \"oven\"})\n\n// Relationships\nCREATE\n  // Ingredient to Process relationships\n  (milk)-[:PREREQ]->(scalding_milk),\n  (eggs)-[:PREREQ]->(beating eggs),\n  (sugar)-[:PREREQ]->(mixing sugar, butter, salt and nutmeg),\n  (butter)-[:PREREQ]->(mixing sugar, butter, salt and nutmeg),\n  (salt)-[:PREREQ]->(mixing sugar, butter, salt and nutmeg),\n  (nutmeg)-[:PREREQ]->(mixing sugar, butter, salt and nutmeg),\n  (vanilla)-[:PREREQ]->(pouring into pie shell),\n  (mixing sugar, butter, salt and nutmeg)-[:FOLLOWED_BY]->(pouring into pie shell),\n  (beating eggs)-[:FOLLOWED_BY]->(pouring into pie shell),\n  (scalding_milk)-[:FOLLOWED_BY]->(pouring into pie shell),\n  (pouring into pie shell)-[:FOLLOWED_BY]->(baking at 425 deg. F for 7 minutes),\n  (pouring into pie shell)-[:FOLLOWED_BY]->(baking at 325 deg. F for 20 to 25 minutes),\n  (oven)-[:USES]->(baking at 425 deg. F for 7 minutes),\n  (oven)-[:USES]->(baking at 325 deg. F for 20 to 25 minutes)\n```"}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 512, "completion_tokens": 680, "total_tokens": 1192}, "system_fingerprint": "fp_2b778c6b35"}]
[{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "A recipe is a directed acyclic graph (DAG) with heterogeneous nodes and edges provides a structured and semantically rich way to represent the information. In this context, the nodes represent entities such as ingredients, utensils, or tools, actions (e.g., chop, boil), and possibly conditions (e.g., for 5 minutes, until golden brown), and final product. The edges represent relationships or dependencies between these entities. The graph must represent intermediate states (like a output of mixing spices), optional steps, and recipe variants. The graph should model XORs (e.g., either use dry chilies or green chilies but not both, either bake at 400 degrees for 10 minutes or broil on high for 20 minutes). It should capture 1) measures e.g., one cup of milk, temperature at 400 deg. F, bake for 20 minutes etc., and 2) conditions like \"fry until light brown\" or \"check for uniform consistency\". The graph needs to represent sub-recipes (like preparing a gravy) as a hierarchical subgraph. We need a separate set of FOLLOWED_BY edges between successive process nodes. Also for every process, we need a set of incoming PREREQ (for prerequisite) edges to connect ingredients to processes. We also need USES edges between process nodes and tool nodes. Further, for each node, add an attribute called \"referenceText\" where you identify the phrase from the original text that relates to the node or the edge of the graph. Produce the result using Cypher CREATE, MERGE and SET statements. Do not invent any ingredients, tools, or utensil nodes. Ensure the graph is connected. Also ensure each sub-recipe is a small recipe graph whose end node is the name of the sub-recipes. The sub-recipe end nodes must be connected to the main recipe. Now I am going to give you recipe texts."}, {"role": "user", "content": "Recipe Name: Tex-Mex Eggplant Melts. Ingredients: 4 slices from one large eggplants (1/2-inch), 2 tablespoons olive oil, 1/2 teaspoon chili powder, 4 slices red onions, 4 tomatoes, slices, 1 avocado, peeled and cut into 8 slices, 4 slices monterey jack pepper cheese, sour cream (to garnish), cilantro (to garnish), Instructions: Brush both sides of each eggplant slice with the olive oil. Place on a baking sheet. Sprinkle the top side of each slice with chili powder. Bake at 350 degrees about 30 minutes, or until tender. Remove the baking sheet from the oven; top each eggplant slice with onion, tomato, avocado and cheese. Broil 1-2 minutes or till the cheese melts and is bubbly. Garnish each serving with a dollop of sour cream and a little cilantro. Enjoy!"}], "temperature": 0.5, "top_p": 0.5}, {"id": "chatcmpl-8yCPE5zKNwzZm9aKXJDSBx9dXvHDt", "object": "chat.completion", "created": 1709358060, "model": "gpt-3.5-turbo-0125", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```cypher\n// Ingredients\nCREATE (:Ingredient {name: \"eggplants\", referenceText: \"4 slices from one large eggplants (1/2-inch)\"})\nCREATE (:Ingredient {name: \"olive oil\", referenceText: \"2 tablespoons olive oil\"})\nCREATE (:Ingredient {name: \"chili powder\", referenceText: \"1/2 teaspoon chili powder\"})\nCREATE (:Ingredient {name: \"red onions\", referenceText: \"4 slices red onions\"})\nCREATE (:Ingredient {name: \"tomatoes\", referenceText: \"4 tomatoes, slices\"})\nCREATE (:Ingredient {name: \"avocado\", referenceText: \"1 avocado, peeled and cut into 8 slices\"})\nCREATE (:Ingredient {name: \"monterey jack pepper cheese\", referenceText: \"4 slices monterey jack pepper cheese\"})\nCREATE (:Ingredient {name: \"sour cream\", referenceText: \"sour cream (to garnish)\"})\nCREATE (:Ingredient {name: \"cilantro\", referenceText: \"cilantro (to garnish)\"})\n\n// Tools\nCREATE (:Tool {name: \"baking sheet\", referenceText: \"Place on a baking sheet\"})\nCREATE (:Tool {name: \"oven\", referenceText: \"Bake at 350 degrees about 30 minutes\"})\nCREATE (:Tool {name: \"broiler\", referenceText: \"Broil 1-2 minutes or till the cheese melts and is bubbly\"})\n\n// Actions\nCREATE (:Action {name: \"brush with olive oil\", referenceText: \"Brush both sides of each eggplant slice with the olive oil\"})\nCREATE (:Action {name: \"sprinkle with chili powder\", referenceText: \"Sprinkle the top side of each slice with chili powder\"})\nCREATE (:Action {name: \"top with onion, tomato, avocado, and cheese\", referenceText: \"top each eggplant slice with onion, tomato, avocado and cheese\"})\nCREATE (:Action {name: \"garnish with sour cream and cilantro\", referenceText: \"Garnish each serving with a dollop of sour cream and a little cilantro\"})\n\n// Recipe\nCREATE (:Process {name: \"preheat oven\", referenceText: \"Bake at 350 degrees about 30 minutes\"})\nCREATE (:Process {name: \"bake eggplant slices\", referenceText: \"Bake at 350 degrees about 30 minutes\"})\nCREATE (:Process {name: \"top with ingredients\", referenceText: \"top each eggplant slice with onion, tomato, avocado and cheese\"})\nCREATE (:Process {name: \"broil\", referenceText: \"Broil 1-2 minutes or till the cheese melts and is bubbly\"})\nCREATE (:Process {name: \"garnish\", referenceText: \"Garnish each serving with a dollop of sour cream and a little cilantro\"})\n\n// Relationships\nCREATE\n  // Ingredient to Process\n  (eggplants)-[:PREREQ]->(bake eggplant slices),\n  (olive oil)-[:PREREQ]->(brush with olive oil),\n  (chili powder)-[:PREREQ]->(sprinkle with chili powder),\n  (red onions)-[:PREREQ]->(top with ingredients),\n  (tomatoes)-[:PREREQ]->(top with ingredients),\n  (avocado)-[:PREREQ]->(top with ingredients),\n  (monterey jack pepper cheese)-[:PREREQ]->(top with ingredients),\n  (sour cream)-[:PREREQ]->(garnish),\n  (cilantro)-[:PREREQ]->(garnish),\n  \n  // Process to Process\n  (preheat oven)-[:FOLLOWED_BY]->(bake eggplant slices),\n  (bake eggplant slices)-[:FOLLOWED_BY]->(top with ingredients),\n  (top with ingredients)-[:FOLLOWED_BY]->(broil),\n  (broil)-[:FOLLOWED_BY]->(garnish)\n```"}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 594, "completion_tokens": 817, "total_tokens": 1411}, "system_fingerprint": "fp_2b778c6b35"}]
[{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "A recipe is a directed acyclic graph (DAG) with heterogeneous nodes and edges provides a structured and semantically rich way to represent the information. In this context, the nodes represent entities such as ingredients, utensils, or tools, actions (e.g., chop, boil), and possibly conditions (e.g., for 5 minutes, until golden brown), and final product. The edges represent relationships or dependencies between these entities. The graph must represent intermediate states (like a output of mixing spices), optional steps, and recipe variants. The graph should model XORs (e.g., either use dry chilies or green chilies but not both, either bake at 400 degrees for 10 minutes or broil on high for 20 minutes). It should capture 1) measures e.g., one cup of milk, temperature at 400 deg. F, bake for 20 minutes etc., and 2) conditions like \"fry until light brown\" or \"check for uniform consistency\". The graph needs to represent sub-recipes (like preparing a gravy) as a hierarchical subgraph. We need a separate set of FOLLOWED_BY edges between successive process nodes. Also for every process, we need a set of incoming PREREQ (for prerequisite) edges to connect ingredients to processes. We also need USES edges between process nodes and tool nodes. Further, for each node, add an attribute called \"referenceText\" where you identify the phrase from the original text that relates to the node or the edge of the graph. Produce the result using Cypher CREATE, MERGE and SET statements. Do not invent any ingredients, tools, or utensil nodes. Ensure the graph is connected. Also ensure each sub-recipe is a small recipe graph whose end node is the name of the sub-recipes. The sub-recipe end nodes must be connected to the main recipe. Now I am going to give you recipe texts."}, {"role": "user", "content": "Recipe Name: Fruit Salad. Ingredients: cherries, black grapes, red grapes, white grapes, bananas, apples, pears, pineapple, oranges, peaches, blackberries, blueberries, strawberries, kiwi, lemon juice, frozen punch concentrate, Instructions: Wash and cut fruit into chunks. Assemble in bowl. Add lemon juice and fruit concentrate. Mix. Chill salad."}], "temperature": 0.5, "top_p": 0.5}, {"id": "chatcmpl-8yCPEYTprhcqSkmhcVM9S4iRdYhG3", "object": "chat.completion", "created": 1709358060, "model": "gpt-3.5-turbo-0125", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```cypher\n// Ingredients\nCREATE (cherries:Ingredient {name: \"cherries\", referenceText: \"cherries\"})\nCREATE (blackGrapes:Ingredient {name: \"black grapes\", referenceText: \"black grapes\"})\nCREATE (redGrapes:Ingredient {name: \"red grapes\", referenceText: \"red grapes\"})\nCREATE (whiteGrapes:Ingredient {name: \"white grapes\", referenceText: \"white grapes\"})\nCREATE (bananas:Ingredient {name: \"bananas\", referenceText: \"bananas\"})\nCREATE (apples:Ingredient {name: \"apples\", referenceText: \"apples\"})\nCREATE (pears:Ingredient {name: \"pears\", referenceText: \"pears\"})\nCREATE (pineapple:Ingredient {name: \"pineapple\", referenceText: \"pineapple\"})\nCREATE (oranges:Ingredient {name: \"oranges\", referenceText: \"oranges\"})\nCREATE (peaches:Ingredient {name: \"peaches\", referenceText: \"peaches\"})\nCREATE (blackberries:Ingredient {name: \"blackberries\", referenceText: \"blackberries\"})\nCREATE (blueberries:Ingredient {name: \"blueberries\", referenceText: \"blueberries\"})\nCREATE (strawberries:Ingredient {name: \"strawberries\", referenceText: \"strawberries\"})\nCREATE (kiwi:Ingredient {name: \"kiwi\", referenceText: \"kiwi\"})\nCREATE (lemonJuice:Ingredient {name: \"lemon juice\", referenceText: \"lemon juice\"})\nCREATE (frozenPunchConcentrate:Ingredient {name: \"frozen punch concentrate\", referenceText: \"frozen punch concentrate\"})\n\n// Process nodes\nCREATE (washAndCut:Process {name: \"Wash and cut fruit into chunks\", referenceText: \"Wash and cut fruit into chunks\"})\nCREATE (assemble:Process {name: \"Assemble in bowl\", referenceText: \"Assemble in bowl\"})\nCREATE (addLemonJuice:Process {name: \"Add lemon juice and fruit concentrate\", referenceText: \"Add lemon juice and fruit concentrate\"})\nCREATE (mix:Process {name: \"Mix\", referenceText: \"Mix\"})\nCREATE (chill:Process {name: \"Chill salad\", referenceText: \"Chill salad\"})\n\n// Connect Ingredients to Process nodes\nCREATE (cherries)-[:PREREQ]->(washAndCut)\nCREATE (blackGrapes)-[:PREREQ]->(washAndCut)\nCREATE (redGrapes)-[:PREREQ]->(washAndCut)\nCREATE (whiteGrapes)-[:PREREQ]->(washAndCut)\nCREATE (bananas)-[:PREREQ]->(washAndCut)\nCREATE (apples)-[:PREREQ]->(washAndCut)\nCREATE (pears)-[:PREREQ]->(washAndCut)\nCREATE (pineapple)-[:PREREQ]->(washAndCut)\nCREATE (oranges)-[:PREREQ]->(washAndCut)\nCREATE (peaches)-[:PREREQ]->(washAndCut)\nCREATE (blackberries)-[:PREREQ]->(washAndCut)\nCREATE (blueberries)-[:PREREQ]->(washAndCut)\nCREATE (strawberries)-[:PREREQ]->(washAndCut)\nCREATE (kiwi)-[:PREREQ]->(washAndCut)\nCREATE (lemonJuice)-[:PREREQ]->(addLemonJuice)\nCREATE (frozenPunchConcentrate)-[:PREREQ]->(addLemonJuice)\n\n// Connect Process nodes\nCREATE (washAndCut)-[:FOLLOWED_BY]->(assemble)\nCREATE (assemble)-[:FOLLOWED_BY]->(addLemonJuice)\nCREATE (addLemonJuice)-[:FOLLOWED_BY]->(mix)\nCREATE (mix)-[:FOLLOWED_BY]->(chill)\n```"}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 478, "completion_tokens": 813, "total_tokens": 1291}, "system_fingerprint": "fp_2b778c6b35"}]
[{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "A recipe is a directed acyclic graph (DAG) with heterogeneous nodes and edges provides a structured and semantically rich way to represent the information. In this context, the nodes represent entities such as ingredients, utensils, or tools, actions (e.g., chop, boil), and possibly conditions (e.g., for 5 minutes, until golden brown), and final product. The edges represent relationships or dependencies between these entities. The graph must represent intermediate states (like a output of mixing spices), optional steps, and recipe variants. The graph should model XORs (e.g., either use dry chilies or green chilies but not both, either bake at 400 degrees for 10 minutes or broil on high for 20 minutes). It should capture 1) measures e.g., one cup of milk, temperature at 400 deg. F, bake for 20 minutes etc., and 2) conditions like \"fry until light brown\" or \"check for uniform consistency\". The graph needs to represent sub-recipes (like preparing a gravy) as a hierarchical subgraph. We need a separate set of FOLLOWED_BY edges between successive process nodes. Also for every process, we need a set of incoming PREREQ (for prerequisite) edges to connect ingredients to processes. We also need USES edges between process nodes and tool nodes. Further, for each node, add an attribute called \"referenceText\" where you identify the phrase from the original text that relates to the node or the edge of the graph. Produce the result using Cypher CREATE, MERGE and SET statements. Do not invent any ingredients, tools, or utensil nodes. Ensure the graph is connected. Also ensure each sub-recipe is a small recipe graph whose end node is the name of the sub-recipes. The sub-recipe end nodes must be connected to the main recipe. Now I am going to give you recipe texts."}, {"role": "user", "content": "Recipe Name: Poppy Seed Bread. Ingredients: 1/4 c. poppy seed, 1 c. hot water, 1 yellow cake mix, 1 pkg. instant coconut cream pudding mix, 1 c. oil, 4 eggs, Instructions: Combine poppy seed and water and let set while mixing other ingredients. Add the water mixture to cake mixture and beat for 5 minutes. Pour into 2 greased and floured bread pans. Bake at 350 deg. F for 50 to 60 minutes."}], "temperature": 0.5, "top_p": 0.5}, {"id": "chatcmpl-8yCPETVfgXXgsopcGSmnGpqwLN3qV", "object": "chat.completion", "created": 1709358060, "model": "gpt-3.5-turbo-0125", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```cypher\n// Ingredients\nCREATE (:Ingredient {name: \"poppy seed\", referenceText: \"1/4 c. poppy seed\"})\nCREATE (:Ingredient {name: \"hot water\", referenceText: \"1 c. hot water\"})\nCREATE (:Ingredient {name: \"yellow cake mix\"})\nCREATE (:Ingredient {name: \"instant coconut cream pudding mix\", referenceText: \"1 pkg. instant coconut cream pudding mix\"})\nCREATE (:Ingredient {name: \"oil\", referenceText: \"1 c. oil\"})\nCREATE (:Ingredient {name: \"eggs\", referenceText: \"4 eggs\"})\n\n// Utensils\nCREATE (:Utensil {name: \"bread pans\", referenceText: \"2 greased and floured bread pans\"})\n\n// Actions\nCREATE (:Action {name: \"combine\", referenceText: \"Combine poppy seed and water and let set while mixing other ingredients.\"})\nCREATE (:Action {name: \"mix\", referenceText: \"Add the water mixture to cake mixture and beat for 5 minutes.\"})\nCREATE (:Action {name: \"pour\", referenceText: \"Pour into 2 greased and floured bread pans.\"})\nCREATE (:Action {name: \"bake\", referenceText: \"Bake at 350 deg. F for 50 to 60 minutes.\"})\n\n// Recipe\nCREATE (:Recipe {name: \"Poppy Seed Bread\"})\n\n// Connect Ingredients to Recipe\nMATCH (i:Ingredient)\nWHERE i.name IN [\"poppy seed\", \"hot water\", \"yellow cake mix\", \"instant coconut cream pudding mix\", \"oil\", \"eggs\"]\nCREATE (i)-[:PREREQ]->(:Recipe {name: \"Poppy Seed Bread\"})\n\n// Connect Utensils to Recipe\nMATCH (u:Utensil)\nWHERE u.name = \"bread pans\"\nCREATE (u)-[:PREREQ]->(:Recipe {name: \"Poppy Seed Bread\"})\n\n// Connect Actions to Recipe\nMATCH (a:Action)\nWHERE a.name IN [\"combine\", \"mix\", \"pour\", \"bake\"]\nCREATE (a)-[:FOLLOWED_BY]->(:Recipe {name: \"Poppy Seed Bread\"})\n\n// Connect Ingredients to Actions\nMATCH (i:Ingredient {name: \"poppy seed\"}), (a:Action {name: \"combine\"})\nCREATE (i)-[:PREREQ]->(a)\nMATCH (i:Ingredient {name: \"hot water\"}), (a:Action {name: \"combine\"})\nCREATE (i)-[:PREREQ]->(a)\nMATCH (i:Ingredient {name: \"yellow cake mix\"}), (a:Action {name: \"mix\"})\nCREATE (i)-[:PREREQ]->(a)\nMATCH (i:Ingredient {name: \"instant coconut cream pudding mix\"}), (a:Action {name: \"mix\"})\nCREATE (i)-[:PREREQ]->(a)\nMATCH (i:Ingredient {name: \"oil\"}), (a:Action {name: \"mix\"})\nCREATE (i)-[:PREREQ]->(a)\nMATCH (i:Ingredient {name: \"eggs\"}), (a:Action {name: \"mix\"})\nCREATE (i)-[:PREREQ]->(a)\n\n// Connect Utensils to Actions\nMATCH (u:Utensil {name: \"bread pans\"}), (a:Action {name: \"pour\"})\nCREATE (u)-[:PREREQ]->(a)\n\n// Connect Recipe to End Action\nMATCH (r:Recipe {name: \"Poppy Seed Bread\"}), (a:Action {name: \"bake\"})\nCREATE (a)-[:FOLLOWED_BY]->(r)\n```"}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 510, "completion_tokens": 760, "total_tokens": 1270}, "system_fingerprint": "fp_2b778c6b35"}]
[{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "A recipe is a directed acyclic graph (DAG) with heterogeneous nodes and edges provides a structured and semantically rich way to represent the information. In this context, the nodes represent entities such as ingredients, utensils, or tools, actions (e.g., chop, boil), and possibly conditions (e.g., for 5 minutes, until golden brown), and final product. The edges represent relationships or dependencies between these entities. The graph must represent intermediate states (like a output of mixing spices), optional steps, and recipe variants. The graph should model XORs (e.g., either use dry chilies or green chilies but not both, either bake at 400 degrees for 10 minutes or broil on high for 20 minutes). It should capture 1) measures e.g., one cup of milk, temperature at 400 deg. F, bake for 20 minutes etc., and 2) conditions like \"fry until light brown\" or \"check for uniform consistency\". The graph needs to represent sub-recipes (like preparing a gravy) as a hierarchical subgraph. We need a separate set of FOLLOWED_BY edges between successive process nodes. Also for every process, we need a set of incoming PREREQ (for prerequisite) edges to connect ingredients to processes. We also need USES edges between process nodes and tool nodes. Further, for each node, add an attribute called \"referenceText\" where you identify the phrase from the original text that relates to the node or the edge of the graph. Produce the result using Cypher CREATE, MERGE and SET statements. Do not invent any ingredients, tools, or utensil nodes. Ensure the graph is connected. Also ensure each sub-recipe is a small recipe graph whose end node is the name of the sub-recipes. The sub-recipe end nodes must be connected to the main recipe. Now I am going to give you recipe texts."}, {"role": "user", "content": "Recipe Name: German Creamed Spinach. Ingredients: 1 (10 ounce) bag fresh spinach, 1 medium onion, roughly chopped, 3 garlic cloves, 3 tablespoons flour, 3 tablespoons olive oil, milk or light cream, 1/2 teaspoon salt (or to taste), Instructions: Wash spinach and steam together with onion for 5 to 10 minutes. Finely chop cooked spinach and onion together with the garlic and place in a medium pot. Combine flour and oil and and heat in a small sauce pan until golden brown. Combine flour mixture with spinach stirring until evenly blended. Add milk to spinach stirring to combine with flour mixture. Bring to a boil over medium heat, then reduce heat and simmer for 30 minutes or until spinach thickens. Salt to taste. Enjoy."}], "temperature": 0.5, "top_p": 0.5}, {"id": "chatcmpl-8yCPER5PFvV6QJtzXJrJHxpeZZSMS", "object": "chat.completion", "created": 1709358060, "model": "gpt-3.5-turbo-0125", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```cypher\n// Ingredients\nCREATE (:Ingredient {name: \"fresh spinach\", referenceText: \"1 (10 ounce) bag fresh spinach\"})\nCREATE (:Ingredient {name: \"onion\", referenceText: \"1 medium onion, roughly chopped\"})\nCREATE (:Ingredient {name: \"garlic cloves\", referenceText: \"3 garlic cloves\"})\nCREATE (:Ingredient {name: \"flour\", referenceText: \"3 tablespoons flour\"})\nCREATE (:Ingredient {name: \"olive oil\", referenceText: \"3 tablespoons olive oil\"})\nCREATE (:Ingredient {name: \"milk or light cream\", referenceText: \"milk or light cream\"})\nCREATE (:Ingredient {name: \"salt\", referenceText: \"1/2 teaspoon salt (or to taste)\"})\n\n// Tools\nCREATE (:Tool {name: \"steamer\"})\nCREATE (:Tool {name: \"knife\"})\nCREATE (:Tool {name: \"medium pot\"})\nCREATE (:Tool {name: \"small sauce pan\"})\n\n// Process Nodes\nCREATE (:Process {name: \"wash spinach\", referenceText: \"Wash spinach\"})\nCREATE (:Process {name: \"steam spinach and onion\", referenceText: \"steam together with onion for 5 to 10 minutes\"})\nCREATE (:Process {name: \"chop spinach, onion, and garlic\", referenceText: \"Finely chop cooked spinach and onion together with the garlic\"})\nCREATE (:Process {name: \"heat flour and oil\", referenceText: \"Combine flour and oil and heat in a small sauce pan until golden brown\"})\nCREATE (:Process {name: \"combine flour mixture with spinach\", referenceText: \"Combine flour mixture with spinach stirring until evenly blended\"})\nCREATE (:Process {name: \"add milk to spinach\", referenceText: \"Add milk to spinach stirring to combine with flour mixture\"})\nCREATE (:Process {name: \"simmer spinach mixture\", referenceText: \"Bring to a boil over medium heat, then reduce heat and simmer for 30 minutes or until spinach thickens\"})\nCREATE (:Process {name: \"salt to taste\", referenceText: \"Salt to taste\"})\n\n// Recipe Node\nCREATE (:Recipe {name: \"German Creamed Spinach\"})\n\n// Connect Ingredients to Process Nodes\nMATCH (i:Ingredient {name: \"fresh spinach\"}), (p:Process {name: \"wash spinach\"})\nCREATE (i)-[:PREREQ]->(p)\nMATCH (i:Ingredient {name: \"onion\"}), (p:Process {name: \"steam spinach and onion\"})\nCREATE (i)-[:PREREQ]->(p)\nMATCH (i:Ingredient {name: \"garlic cloves\"}), (p:Process {name: \"chop spinach, onion, and garlic\"})\nCREATE (i)-[:PREREQ]->(p)\nMATCH (i:Ingredient {name: \"flour\"}), (p:Process {name: \"heat flour and oil\"})\nCREATE (i)-[:PREREQ]->(p)\nMATCH (i:Ingredient {name: \"olive oil\"}), (p:Process {name: \"heat flour and oil\"})\nCREATE (i)-[:PREREQ]->(p)\nMATCH (i:Ingredient {name: \"milk or light cream\"}), (p:Process {name: \"add milk to spinach\"})\nCREATE (i)-[:PREREQ]->(p)\nMATCH (i:Ingredient {name: \"salt\"}), (p:Process {name: \"salt to taste\"})\nCREATE (i)-[:PREREQ]->(p)\n\n// Connect Process Nodes with FOLLOWED_BY relationships\nMATCH (p1:Process), (p2:Process)\nWHERE p1.name = \"wash spinach\" AND p2.name = \"steam spinach and onion\"\nCREATE (p1)-[:FOLLOWED_BY]->(p2)\nMATCH (p1:Process), (p2:Process)\nWHERE p1.name = \"steam spinach and onion\" AND p2.name = \"chop spinach, onion, and garlic\"\nCREATE (p1)-[:FOLLOWED_BY]->(p2)\nMATCH (p1:Process), (p2:Process)\nWHERE p1.name = \"chop spinach, onion, and garlic\" AND p2.name = \"heat flour and oil\"\nCREATE (p1)-[:FOLLOWED_BY]->(p2)\nMATCH (p1:Process), (p2:Process)\nWHERE p1.name = \"heat flour and oil\" AND p2.name = \"combine flour mixture with spinach\"\nCREATE (p1)-[:FOLLOWED_BY]->(p2)\nMATCH (p1:Process), (p2:Process)\nWHERE p1.name = \"combine flour mixture with spinach\" AND p2.name = \"add milk to spinach\"\nCREATE (p1)-[:FOLLOWED_BY]->(p2)\nMATCH (p1:Process), (p2:Process)\nWHERE p1.name = \"add milk to spinach\" AND p2.name = \"simmer spinach mixture\"\nCREATE (p1)-[:FOLLOWED_BY]->(p2)\nMATCH (p1:Process), (p2:Process)\nWHERE p1.name = \"simmer spinach mixture\" AND p2.name = \"salt to taste\"\nCREATE (p1)-[:FOLLOWED_BY]->(p2)\n\n// Connect Process Nodes with USES relationships\nMATCH (p:Process {name: \"steam spinach and onion\"}), (t:Tool {name: \"steamer\"})\nCREATE (p)-[:USES]->(t)\nMATCH (p:Process {name: \"chop spinach, onion, and garlic\"}), (t:Tool {name: \"knife\"})\nCREATE (p)-[:USES]->(t)\nMATCH (p:Process {name: \"heat flour and oil\"}), (t:Tool {name: \"small sauce pan\"})\nCREATE (p)-[:USES]->(t)\n```\nThis Cypher script creates a graph representing the recipe for German Creamed Spinach, including ingredients, tools, process nodes, and their relationships. The graph is connected and follows the structure specified in the requirements."}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 562, "completion_tokens": 1253, "total_tokens": 1815}, "system_fingerprint": "fp_2b778c6b35"}]
[{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "A recipe is a directed acyclic graph (DAG) with heterogeneous nodes and edges provides a structured and semantically rich way to represent the information. In this context, the nodes represent entities such as ingredients, utensils, or tools, actions (e.g., chop, boil), and possibly conditions (e.g., for 5 minutes, until golden brown), and final product. The edges represent relationships or dependencies between these entities. The graph must represent intermediate states (like a output of mixing spices), optional steps, and recipe variants. The graph should model XORs (e.g., either use dry chilies or green chilies but not both, either bake at 400 degrees for 10 minutes or broil on high for 20 minutes). It should capture 1) measures e.g., one cup of milk, temperature at 400 deg. F, bake for 20 minutes etc., and 2) conditions like \"fry until light brown\" or \"check for uniform consistency\". The graph needs to represent sub-recipes (like preparing a gravy) as a hierarchical subgraph. We need a separate set of FOLLOWED_BY edges between successive process nodes. Also for every process, we need a set of incoming PREREQ (for prerequisite) edges to connect ingredients to processes. We also need USES edges between process nodes and tool nodes. Further, for each node, add an attribute called \"referenceText\" where you identify the phrase from the original text that relates to the node or the edge of the graph. Produce the result using Cypher CREATE, MERGE and SET statements. Do not invent any ingredients, tools, or utensil nodes. Ensure the graph is connected. Also ensure each sub-recipe is a small recipe graph whose end node is the name of the sub-recipes. The sub-recipe end nodes must be connected to the main recipe. Now I am going to give you recipe texts."}, {"role": "user", "content": "Recipe Name: Vegetarian Ribs. Ingredients: 2 cups gluten, 1/3 cup nutritional yeast, 2 tablespoons paprika, 1 tablespoon salt, 2 cups water, 1/2 cup smooth peanut butter, 1 large onion, minced, 1/2 cup olive oil, 2 cups barbeque sauce, Instructions: In a large bowl, stir together the gluten, yeast, paprika and salt. Pour in the water all at once and quickly mix with a sturdy spoon. Additional water may be necessary to moisten all of the dry gluten. Dont worry that the ball is rather solid, it is supposed to be. Pour off any excess water. If you want your ribs chewy, leave the ball just as it is. If you want it slightly less chewy, remove it from the bowl and knead for 1 to 2 minutes on a clean surface. Return it to the bowl, and coat with smooth peanut butter. Set aside. Heat the oil in a skillet over medium heat. Add onion; cook and stir until golden brown. Remove from the heat. Pour the onion and oil over the ball of gluten. Poke a few times with a chopstick, knife or even a fork, allowing the oil to soak into the ball. Let cool. When the ball is just warm enough to be manageable, use your hands to mix the oil and onions in. There will be a lot of oil that will not mix in and tiny pieces of gluten that will not stay attached. Thats okay. The oil mainly helps the gluten absorb the spice. Just mix as much as you can. Preheat the oven to 350 degrees F (175 degrees C). Break off good sized handfuls of dough and shape them into strips by pulling and twisting. You want them to be about 4 inches long and 1/2 inch thick. Dont try cutting these, or rolling them out, as that will make them behave more like bread and change the texture appreciably. Place the strips on a greased baking sheet. Bake for 40 minutes in the preheated oven. Remove from the oven and coat each piece liberally with barbeque sauce. Return to the oven for another 10 minutes."}], "temperature": 0.5, "top_p": 0.5}, {"id": "chatcmpl-8yCPEgeA0XygYWGh2LPDzJ0VODL17", "object": "chat.completion", "created": 1709358060, "model": "gpt-3.5-turbo-0125", "choices": [{"index": 0, "message": {"role": "assistant", "content": "```cypher\n// Ingredients\nCREATE (gluten:Ingredient {name: \"gluten\", quantity: \"2 cups\", referenceText: \"2 cups gluten\"})\nCREATE (yeast:Ingredient {name: \"nutritional yeast\", quantity: \"1/3 cup\", referenceText: \"1/3 cup nutritional yeast\"})\nCREATE (paprika:Ingredient {name: \"paprika\", quantity: \"2 tablespoons\", referenceText: \"2 tablespoons paprika\"})\nCREATE (salt:Ingredient {name: \"salt\", quantity: \"1 tablespoon\", referenceText: \"1 tablespoon salt\"})\nCREATE (water:Ingredient {name: \"water\", quantity: \"2 cups\", referenceText: \"2 cups water\"})\nCREATE (peanutButter:Ingredient {name: \"smooth peanut butter\", quantity: \"1/2 cup\", referenceText: \"1/2 cup smooth peanut butter\"})\nCREATE (onion:Ingredient {name: \"onion\", quantity: \"1 large, minced\", referenceText: \"1 large onion, minced\"})\nCREATE (oil:Ingredient {name: \"olive oil\", quantity: \"1/2 cup\", referenceText: \"1/2 cup olive oil\"})\nCREATE (bbqSauce:Ingredient {name: \"barbeque sauce\", quantity: \"2 cups\", referenceText: \"2 cups barbeque sauce\"})\n\n// Tools\nCREATE (bowl:Tool {name: \"large bowl\", referenceText: \"In a large bowl\"})\nCREATE (spoon:Tool {name: \"sturdy spoon\", referenceText: \"mix with a sturdy spoon\"})\nCREATE (skillet:Tool {name: \"skillet\", referenceText: \"Heat the oil in a skillet\"})\nCREATE (chopstick:Tool {name: \"chopstick\", referenceText: \"Poke a few times with a chopstick\"})\nCREATE (knife:Tool {name: \"knife\", referenceText: \"Poke a few times with a knife\"})\nCREATE (fork:Tool {name: \"fork\", referenceText: \"Poke a few times with a fork\"})\nCREATE (oven:Tool {name: \"oven\", referenceText: \"Preheat the oven to 350 degrees F (175 degrees C)\"})\n\n// Process Nodes\nCREATE (mixDryIngredients:Process {name: \"Mix Dry Ingredients\", referenceText: \"stir together the gluten, yeast, paprika and salt\"})\nCREATE (addWater:Process {name: \"Add Water\", referenceText: \"Pour in the water all at once and quickly mix\"})\nCREATE (kneadDough:Process {name: \"Knead Dough\", referenceText: \"knead for 1 to 2 minutes on a clean surface\"})\nCREATE (coatPeanutButter:Process {name: \"Coat with Peanut Butter\", referenceText: \"coat with smooth peanut butter\"})\nCREATE (cookOnion:Process {name: \"Cook Onion\", referenceText: \"Add onion; cook and stir until golden brown\"})\nCREATE (mixOnionOil:Process {name: \"Mix Onion and Oil\", referenceText: \"use your hands to mix the oil and onions in\"})\nCREATE (shapeStrips:Process {name: \"Shape Strips\", referenceText: \"shape them into strips by pulling and twisting\"})\nCREATE (bakeStrips:Process {name: \"Bake Strips\", referenceText: \"Bake for 40 minutes in the preheated oven\"})\nCREATE (coatBBQSauce:Process {name: \"Coat with BBQ Sauce\", referenceText: \"coat each piece liberally with barbeque sauce\"})\nCREATE (bakeAgain:Process {name: \"Bake Again\", referenceText: \"Return to the oven for another 10 minutes\"})\n\n// Recipe Start Node\nCREATE (recipe:Recipe {name: \"Vegetarian Ribs\"})\n\n// Connect Ingredients to Process Nodes\nCREATE (gluten)-[:PREREQ]->(mixDryIngredients)\nCREATE (yeast)-[:PREREQ]->(mixDryIngredients)\nCREATE (paprika)-[:PREREQ]->(mixDryIngredients)\nCREATE (salt)-[:PREREQ]->(mixDryIngredients)\nCREATE (water)-[:PREREQ]->(addWater)\nCREATE (peanutButter)-[:PREREQ]->(coatPeanutButter)\nCREATE (onion)-[:PREREQ]->(cookOnion)\nCREATE (oil)-[:PREREQ]->(cookOnion)\nCREATE (bbqSauce)-[:PREREQ]->(coatBBQSauce)\n\n// Connect Process Nodes with Tools\nCREATE (mixDryIngredients)-[:USES]->(bowl)\nCREATE (addWater)-[:USES]->(spoon)\nCREATE (kneadDough)-[:USES]->(null)\nCREATE (coatPeanutButter)-[:USES]->(null)\nCREATE (cookOnion)-[:USES]->(skillet)\nCREATE (mixOnionOil)-[:USES]->(chopstick)\nCREATE (mixOnionOil)-[:USES]->(knife)\nCREATE (mixOnionOil)-[:USES]->(fork)\nCREATE (shapeStrips)-[:USES]->(null)\nCREATE (bakeStrips)-[:USES]->(oven)\nCREATE (coatBBQSauce)-[:USES]->(null)\nCREATE (bakeAgain)-[:USES]->(oven)\n\n// Connect Process Nodes with Recipe\nCREATE (recipe)-[:FOLLOWED_BY]->(mixDryIngredients)\nCREATE (mixDryIngredients)-[:FOLLOWED_BY]->(addWater)\nCREATE (addWater)-[:FOLLOWED_BY]->(kneadDough)\nCREATE (kneadDough)-[:FOLLOWED_BY]->(coatPeanutButter)\nCREATE (coatPeanutButter)-[:FOLLOWED_BY]->(cookOnion)\nCREATE (cookOnion)-[:FOLLOWED_BY]->(mixOnionOil)\nCREATE (mixOnionOil)-[:FOLLOWED_BY]->(shapeStrips)\nCREATE (shapeStrips)-[:FOLLOWED_BY]->(bakeStrips)\nCREATE (bakeStrips)-[:FOLLOWED_BY]->(coatBBQSauce)\nCREATE (coatBBQSauce)-[:FOLLOWED_BY]->(bakeAgain)\n```"}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 856, "completion_tokens": 1300, "total_tokens": 2156}, "system_fingerprint": "fp_2b778c6b35"}]
